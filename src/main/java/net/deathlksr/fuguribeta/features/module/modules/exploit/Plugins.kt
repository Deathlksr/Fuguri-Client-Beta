/*
 * FDPClient Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge by LiquidBounce.
 * https://github.com/SkidderMC/FDPClient/
 */
package net.deathlksr.fuguribeta.features.module.modules.exploit

import net.deathlksr.fuguribeta.event.EventTarget
import net.deathlksr.fuguribeta.event.PacketEvent
import net.deathlksr.fuguribeta.event.UpdateEvent
import net.deathlksr.fuguribeta.features.module.Module
import net.deathlksr.fuguribeta.features.module.Category
import net.deathlksr.fuguribeta.utils.ClientUtils.displayChatMessage
import net.deathlksr.fuguribeta.utils.PacketUtils.sendPacket
import net.deathlksr.fuguribeta.utils.timing.TickTimer
import net.minecraft.network.play.client.C14PacketTabComplete
import net.minecraft.network.play.server.S3APacketTabComplete

object Plugins : Module("Plugins", Category.EXPLOIT, subjective = true, gameDetecting = false) {

    private val tickTimer = TickTimer()

    override fun onEnable() {
        if (mc.thePlayer == null)
            return

        sendPacket(C14PacketTabComplete("/"))
        sendPacket(C14PacketTabComplete("/version"))
        sendPacket(C14PacketTabComplete("/ver"))
        sendPacket(C14PacketTabComplete("/about"))
        sendPacket(C14PacketTabComplete("/a"))
        sendPacket(C14PacketTabComplete("/ab"))
        sendPacket(C14PacketTabComplete("/help"))
        sendPacket(C14PacketTabComplete("/?"))
        sendPacket(C14PacketTabComplete("/bukkit:"))
        tickTimer.reset()
    }

    @EventTarget
    fun onUpdate(event: UpdateEvent) {
        tickTimer.update()

        if (tickTimer.hasTimePassed(20)) {
            displayChatMessage("§cPlugins check timed out...")
            tickTimer.reset()
            state = false
        }
    }

    @EventTarget
    fun onPacket(event: PacketEvent) {
        if (event.packet is S3APacketTabComplete) {
            val s3APacketTabComplete = event.packet

            val plugins = mutableSetOf<String>()
            val commands = s3APacketTabComplete.func_149630_c()

            for (command1 in commands) {
                val command = command1.split(":")

                if (command.size > 1) {
                    val pluginName = command[0].replace("/", "")
                    plugins += pluginName
                }
            }

            if (plugins.isNotEmpty())
                displayChatMessage("§aPlugins §7(§8" + plugins.size + "§7): §c" + plugins.sorted().joinToString("§7, §c"))
            else
                displayChatMessage("§cNo plugins found.")
            state = false
            tickTimer.reset()
        }
    }
}